#For this project I downloaded Spotify data from Kaggle
#Then I created a table in SQLLiteStudio to add the data to and analyze

#Creating the table:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I asked the following questions: 
--What are the 10 longest songs in this database and who are they by? 
Select artist_name, track_name, duration_ms 
From BIT_DB.Spotifydata 
Group By duration_ms
Order By duration_ms asc
Limit 10

--What is the least popular song in the database and who is it by? 
Select artist_name, track_name, popularity
From BIT_DB.Spotifydata
Group By popularity
Order By popularity asc
Limit 1

--Which is the best popular song to have at a dance party? I.e. which song has the highest average danceability and popularity score and who is it by? 
Select artist_name, track_name, (popularity*danceability)
From BIT_DB.Spotifydata
Group by (popularity*danceability)
Order By (popularity*danceability) desc
Limit 1

--CTE pracitce: Calculate the average popularity for the artists in the Spotify data table. 
--Then, for every artist with an average popularity of 90 or above, show their name, 
--their average popularity, and label them as a “Top Star”.

With popArtist As (
 Select s.artist_name, AVG(s.popularity) As ave_popularity
 FROM Spotifydata s
 Group By s.artist_name
)

Select artist_name, ave_popularity, 'Top Star' AS tag 
From popArtist
Where ave_popularity >= 90
